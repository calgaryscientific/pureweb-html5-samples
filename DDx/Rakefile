project="DDx"

purewebhome = ENV['PUREWEB_HOME']
pureweblibs = ENV['PUREWEB_LIBS']

variations = ['Client']

desc "Clean #{project}"
task :clean do	
	FileUtils.rm_r("bower_components", :force => true)
end

desc "Setup #{project}"
task :setup do
	sh("bower install")
end

desc "Deploy #{project}"
task :deploy do
	Rake::Task[:stage].invoke
end

desc "Package #{project}"
task :package do
	puts "Need to implement PACKAGE for #{project}"
end

desc "Package clean #{project}"
task :packageclean do
	puts "Need to implement PACKAGECLEAN for #{project}"
end 

desc "Stage #{project}"
task :stage do
    variations.each do|lang| 	
    	puts "#{purewebhome}/web/clients/#{project}#{lang}"
    	FileUtils.mkdir_p("#{purewebhome}/web/clients/#{project}#{lang}")		
	    #Copy everything but the Rakefile
	    files = Dir.glob("*")
	    files.delete("Rakefile") 
	    FileUtils.cp_r(files, "#{purewebhome}/web/clients/#{project}#{lang}/")		

	    if File.exist?("#{pureweblibs}/HTML5/pureweb.min.js")
	    	FileUtils.mkdir_p("#{purewebhome}/web/clients/#{project}#{lang}/lib/pureweb")		
	    	FileUtils.cp_r("#{pureweblibs}/HTML5/.", "#{purewebhome}/web/clients/#{project}#{lang}/lib/pureweb")	
	    end
	end
end

desc "Stage clean #{project}"
task :stageclean do
	variations.each do|lang| 
	 	FileUtils.rm_r("#{purewebhome}/web/clients/#{project}#{lang}", :force => true)
	end
end

desc "Build all the things for #{project}"
task :all do |t|
	scope = t.scope.first || ''
	scope = scope.length > 0 ? scope + ":" : scope
	Rake::Task[scope+'stageclean'].invoke
	Rake::Task[scope+'stage'].invoke
	Rake::Task[scope+'packageclean'].invoke "release"
	Rake::Task[scope+'package'].invoke
end

task :default do
	sh("rake -T")
end